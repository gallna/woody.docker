input {
  tcp {
    port => "${TCP_PORT:5000}"
    type => syslog
  }
  udp {
    port => "${UDP_PORT:5000}"
    type => syslog
  }
}

filter {
	if [type] == "syslog" {
		grok {
			match => { "message" => "(?m)<%{NONNEGINT:syslog5424_pri}>%{NONNEGINT:syslog5424_ver} +(?:%{TIMESTAMP_ISO8601:syslog5424_ts}|-)+(?: %{HOSTNAME:syslog5424_host}|-|)+(?: %{HOSTNAME:syslog5424_app}|-) +(?:%{WORD:syslog5424_proc}|-) - (?:\[%{DATA:syslog5424_sd}\]+|-|) +%{GREEDYDATA:syslog5424_msg}" }
		}
		if !("_grokparsefailure" in [tags]) {
			mutate {
				replace => [ "message", "%{syslog5424_msg}" ]
				replace => [ "timestamp", "%{syslog5424_ts}" ]
				replace => [ "priority", "%{syslog5424_pri}" ]
				replace => [ "container", "%{syslog5424_app}" ]
        replace => [ "host", "%{syslog5424_host}" ]
				replace => [ "proc", "%{syslog5424_proc}" ]
			}
			mutate {
        add_field => [ "format", "rfc5424" ]
				remove_field => [ "syslog5424_host", "syslog5424_msg", "syslog5424_ts", "syslog5424_pri", "syslog5424_app", "syslog5424_proc", "syslog5424_ver" ]
			}
		}
	}
  mutate {
    add_field => { "[@metadata][LS_MODE]" => "${LS_MODE:debug}" }
  }
}

filter {
  if [format] == "rfc5424" {
    grok {
      match => [ "syslog5424_sd", "project=\"%{DATA:project}\" stack=\"%{DATA:stack}\" ip=\"%{DATA:ip}\" hostname=\"%{DATA:hostname}\"" ]
    }
    if !("_grokparsefailure" in [tags]) {
      mutate {
        remove_field => "syslog5424_sd"
      }
    }
  }
}

filter {
  if [message] =~ /^\[?{".*"}\]?$/ {
    json {
      source => "message"
      target => "log"
      remove_field => ["message"]
    }
    if !("_jsonparsefailure" in [tags]) {
      mutate {
        replace => [ "format", "json" ]
      }
    }
  }
}

output {
  elasticsearch { hosts =>  "${ELASTICSEARCH:elasticsearch:9200}" }
  if [@metadata][LS_MODE] == "debug" {
    stdout { codec => rubydebug }
  }
}
